React组件化
1.使用组件化
2.antd组件库使用
3.组件通信
4.组件的多个模式
        ----类组件
        ---函数组件

---------------------------------------------

容器组件和展示组件
容器组件:负责数据获取，有很重的逻辑在里面----业务
展示组件：负责根据props显示信息-------------展示

rcc---创建react文件快捷键

轮循

PureComponent----纯组件
shallowCompare---浅比较---只比较了第一层

props---属性
state---状态


想要利用PureComponent特性原则：
1.确保数据类型是值类型
2.如果是引用类型，确保地址不变，同时不应当有深层次数据变化


高阶组件：

解构：
{..c} === body={c.body} author={c.author}

组件复合而非组件继承
组件的扩展

props:属性可以是任何的复杂对象，包括JSX

一切都是组件，组件套组件

保证组件功能单一性

高阶组件：HOC Higher-Order-Components------是个函数

高阶组件接收一个组件，返回一个更厉害的组件
高阶组件接收一个组件，加工处理后产生一个新的组件

基础组件通过高阶组件进行升级
高阶组件还可以重写参数组件的生命周期

高阶链式调用

render(){
  是不是这里用props 就要写this啊？
}

组件通信---上下文
vue.js的privide&inject模式的来源---content

Context
Provide------提供数据者-----传递数据
Consumer-----数据使用者-----使用数据





